package by.it.okatov.jd01_07;

/***
 * Абстрактный класс-хранилище арифметических операций над различными данными
 */
public abstract class ArithmeticOperation {
    /***
     * Умножение двух операндов
     * @param operand1 - множимое (актуально для матриц и векторов, для скаляров - это множитель)
     * @param operand2 - множитель
     * @param <T> - тип операндов передаваемых в метод (матрица, вектор, скаляр)
     * @return - возвращает результат операции (новую матрицу, новый вектор, новый скаляр)
     */
    abstract <T> T multiplication(T operand1, T operand2);

    /***
     * Сложение двух операндов
     * @param operand1 - первое слагаемое
     * @param operand2 - второе слагаемое
     * @param <T> - тип операндов передаваемых в метод (матрица, вектор, скаляр)
     * @return - возвращает результат операции (новую матрицу, новый вектор, новый скаляр)
     */
    abstract <T> T addition(T operand1, T operand2);

    /***
     * Разность двух операндов
     * @param operand1 - уменьшаемое
     * @param operand2 - вычитаемое
     * @param <T> - тип операндов передаваемых в метод (матрица, вектор, скаляр)
     * @return - возвращает результат операции (новую матрицу, новый вектор, новый скаляр)
     */
    abstract <T> T subtraction(T operand1, T operand2);

    /***
     * Квадратный корень операнда
     * @param operand - квадрат
     * @param <T> - тип операнда передаваемого в метод (матрица, вектор, скаляр)
     * @return - возвращает результат операции (всегда положительный?) (новую матрицу, новый вектор, новый скаляр)
     */
    abstract <T> T sqrt(T operand);
}
